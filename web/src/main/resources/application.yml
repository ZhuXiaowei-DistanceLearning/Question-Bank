spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  application:
    name: question-bank
  cache:
    type: REDIS
  datasource:
    hikari:
      master:
        jdbcUrl: jdbc:mysql://zxw.mysql.com:3306/zero_biz?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
        username: sunline
        password: Sunline!@#123
        driverClassName: com.mysql.jdbc.Driver
      slave01:
        jdbcUrl: jdbc:mysql://zxw.mysql.com:3306/zero_biz?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
        username: sunline
        password: Sunline!@#123
        driverClassName: com.mysql.jdbc.Driver
      slave02:
        jdbcUrl: jdbc:mysql://zxw.mysql.com:3306/zero_biz?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
        username: sunline
        password: Sunline!@#123
        driverClassName: com.mysql.jdbc.Driver
#    hikari:
#      maximum-pool-size: 10
#      register-mbeans: true
      #    primary:
  data:
#    mongodb:
#      uri: mongodb://zxw.middleware.com:27017/magpie_test?maxIdleTimeMS=3000
    redis:
#      host: zxw.middleware.com
#      port: 16379
      password: ZxcvyG789GF
#      database: 7
      cluster:
        nodes:
          - zxw.redis.com:7001
#      lettuce:
#        pool:
#          max-active: 8
      #    cluster:
      #      nodes: redis.dev.magpie.com:7001,redis.dev.magpie.com:7002,redis.dev.magpie.com:7003
#  kafka:
#    bootstrap-servers: zxw.kafka.com:9092
#    producer:
#      acks: 1
#      client-id: kafka-producer
#      batch-size: 16384
#      buffer-memory: 33554432
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      retries: 0
#    consumer:
#      group-id: hello-group
#      enable-auto-commit: false
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#  rabbitmq:
#    host: zxw.middleware.com
#    port: 5672
#    username: zhuxw
#    password: 123456
#    virtual-host: /apec
#    listener:
#      simple:
#        acknowledge-mode: AUTO
#        prefetch: 250
#    #        default-requeue-rejected: true
#    publisher-confirm-type: correlated
#    publisher-returns: true
#  cloud:
#    stream:
#      function:
#        definition: demoChannel
#      binders: # 在此处配置要绑定的rabbitmq的服务信息；
#        my-rabbit: # 表示定义的名称，用于于binding整合
#          type: rabbit # 消息组件类型
#          environment: # 设置rabbitmq的相关的环境配置
#            spring:
#              rabbitmq:
#                host: zxw.rabbit.com
#                port: 5672
#                username: zhuxw
#                password: 123456
#      bindings: # 服务的整合处理
#        ##新版本固定格式  channel名字-{out/in}-{index}
#        demoChannel-out-0:
#          # 信道和消息队列的关系是通过destination属性指定
#          destination: studyExchange
#          contentType: application/json
#          binder: my-rabbit
#        demoChannel-in-0:
#          destination: studyExchange
#          contentType: application/json
#          group: demo
#          binder: my-rabbit
  messages:
    basename: i18n/app
#  zipkin:
#    sender:
#      type: rabbit
#    rabbitmq:
#      addresses: zxw.rabbit.com
#      queue: zipkin
  sleuth:
    sampler:
      # 采样率
      probability: 1.0
      # 每秒采样数字最高为100
      rate: 100
#rocketmq:
#  name-server: zxw.rocketmq.com:9876
#  producer:
#    group: my-producer-group
# 监控配置
management:
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  prometheus:
    metrics:
      export:
        enabled: true
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
storage:
  ribbon:
    #建立连接超时时间
    ConnectTimeout: 6000
    #建立连接之后，读取响应资源超时时间
    ReadTimeout: 6000
    MaxAutoRetries: 3
    MaxAutoRetriesNextServer: 3

feign:
  httpclient:
    enabled: true
  client:
    config:
      storage:
        connect-timeout: 5000
        ReadTimeout: 5000
        MaxAutoRetries: 2
        MaxAutoRetriesNextServer: 2

#logging:
#  config: classpath:logback-spring.xml
#  thymeleaf:
#    enabled: true  #开启thymeleaf视图解析
#    encoding: utf-8  #编码
##    prefix: classpath:/templates/  #前缀
#    cache: false  #是否使用缓存
#    mode: HTML  #严格的HTML语法模式
#    suffix: .html  #后缀名
server:
  port: 8081
logging:
  config: classpath:logback-spring.xml
bean:
  key: 123
  map:
    key: 123
springdoc:
  swagger-ui:
    path: /swagger-ui.html
#    operations-sorter: method
    #custom path for api docs
#    url: /doc/openapi.json
#--spring:
#  profiles:
#    active=chaos-monkey:
#chaos:
#  monkey:
#    # 启动monkey
#    enabled: true
#    assaults:
#      # 确定多少请求被攻击，1为攻击所有请求；5：每5个请求攻击一次
#      level: 1
#      # 增加最小延时，毫秒
#      latency-range-start: 5000
#      # 增加最大延时，毫秒
#      latency-range-end: 10000
#      # 延时攻击启动
#      latency-active: true
#      # 异常攻击启动
#      exceptions-active: true
#      # kill应用启动
#      kill-application-active: true
#    watcher: # 控制范围
#      controller: true
#      rest-controller: true
#      service: true
#      repository: true # （JDBC和JPA）
#      component: true