version: '3'
services:
  mysql:
    image: mysql:5.7.36
    container_name: mysql-server
    restart: always
    volumes:
      - ./mysql/mydir:/mydir
      - ./mysql/db:/var/lib/mysql
      - ./mysql/conf/my.cnf:/etc/my.cnf
      #      数据库还原目录 可将需要还原的sql文件放在这里
      - /docker/mysql/source:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=123456"
      - "TZ=Asia/Shanghai"
    ports:
      - 3306:3306
  mongo:
    image: mongo:latest
    restart: always
    container_name: mongodb-server
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/log:/var/log/mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  kafka-manager:
    image: sheepkiller/kafka-manager
    environment:
      ZK_HOSTS: zookeeper:2181                 ## 修改:宿主机IP
    ports:
      - "9001:9000"
  ## rabbitmq-plugins enable rabbitmq_management
  rabbitmq:
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "123456"
    image: daocloud.io/rabbitmq:3
    container_name: rabbitmq-server
    restart: always
    volumes:
      - "./rabbitmq/data:/var/lib/rabbitmq"
      - "./rabbitmq/log:/var/log/rabbitmq/log"
    ports:
      - "15672:15672"
      - "4369:4369"
      - "5672:5672"
  redis:
    image: redis:6.2.6-alpine
    container_name: redis-single-server
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./redis/single/data:/data
      - ./redis/single/conf/redis.conf:/usr/local/etc/redis/redis.conf

  redis1:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node1
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node1.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node1/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis2:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node2
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node2.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node2/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis3:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node3
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node3.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node3/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis4:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node4
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node4.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node4/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis5:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node5
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node5.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node5/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis6:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node6
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node6.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node6/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./portainer/data:/data"
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    ports:
      - "9000:9000"