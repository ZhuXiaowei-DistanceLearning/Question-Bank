version: '3'
services:
  mysql:
    image: mysql:5.7.36
    container_name: mysql-server
    restart: always
    volumes:
      - ./mysql/mydir:/mydir
      - ./mysql/db:/var/lib/mysql
      - ./mysql/conf/my.cnf:/etc/my.cnf
      #      数据库还原目录 可将需要还原的sql文件放在这里
      - /docker/mysql/source:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=123456"
      - "TZ=Asia/Shanghai"
    ports:
      - 3306:3306
  mongo:
    image: mongo:latest
    restart: always
    container_name: mongodb-server
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/log:/var/log/mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  zoo1:
    image: wurstmeister/zookeeper
    restart: always
    container_name: zoo1
    hostname: zoo1
    ports:
      - 2181:2181
    volumes:
      - "./zk/zoo1/data:/data"
      - "./zk/zoo1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  zoo2:
    image: wurstmeister/zookeeper
    restart: always
    container_name: zoo2
    hostname: zoo2
    ports:
      - 2182:2181
    volumes:
      - "./zk/zoo2/data:/data"
      - "./zk/zoo2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  zoo3:
    image: wurstmeister/zookeeper
    restart: always
    container_name: zoo3
    hostname: zoo3
    ports:
      - 2183:2181
    volumes:
      - "./zk/zoo3/data:/data"
      - "./zk/zoo3/datalog:/datalog"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  kafka1:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka1
    ports:
      - "9092:9092"
    external_links:
      - zoo1
      - zoo2
      - zoo3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092    ## 宿主机IP
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2181,zoo3:2181"
    volumes:
      - "./kafka/kafka1/data/:/kafka"
  kafka2:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka2
    ports:
      - "9092:9092"
    external_links:
      - zoo1
      - zoo2
      - zoo3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9093    ## 宿主机IP
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2181,zoo3:2181"
    volumes:
      - "./kafka/kafka2/data/:/kafka"
  kafka3:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka3
    ports:
      - "9092:9092"
    external_links:
      - zoo1
      - zoo2
      - zoo3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9094    ## 宿主机IP
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2181,zoo3:2181"
    volumes:
      - "./kafka/kafka3/data/:/kafka"
  kafka-manager:
    image: sheepkiller/kafka-manager
    environment:
      ZK_HOSTS: zoo1:2181,zoo2:2181,zoo3:2181 ## 修改:宿主机IP
      KAFKA_BROKERS: kafka1:9092,kafka2:9093,kafka3:9094
      TZ: Asia/Shanghai
    ports:
      - "9001:9000"
  rabbitmq:
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "123456"
    image: daocloud.io/rabbitmq:3
    container_name: rabbitmq-server
    restart: always
    volumes:
      - "./rabbitmq/data:/var/lib/rabbitmq"
      - "./rabbitmq/log:/var/log/rabbitmq/log"
    ports:
      - "15672:15672"
      - "4369:4369"
      - "5672:5672"
  redis:
    image: redis:6.2.6-alpine
    container_name: redis-single-server
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./redis/single/data:/data
      - ./redis/single/conf/redis.conf:/usr/local/etc/redis/redis.conf

  redis1:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node1
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node1.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node1/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis2:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node2
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node2.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node2/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis3:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node3
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node3.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node3/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis4:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node4
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node4.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node4/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis5:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node5
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node5.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node5/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"

  redis6:
    image: redis:6.2.6-alpine
    container_name: redis-cluster-server-node6
    command: [ "redis-server","/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/cluster/conf/redis-node6.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cluster/node6/data:/data
    environment:
      - TZ=Asia/Shanghai
    restart: always
    network_mode: "host"
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./portainer/data:/data"
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    ports:
      - "9000:9000"
  rocketmqnamesrv:
    image: foxiswho/rocketmq:4.8.0
    container_name: rocketmqnamesrv
    ports:
      - 9876:9876
    environment:
      TZ: Asia/Shanghai
      JAVA_OPT: -server -Xms256m -Xmx256m
    command: sh mqnamesrv
  rocketmqbroker:
    image: foxiswho/rocketmq:4.8.0
    container_name: rocketmqbroker
    ports:
      - 10911:10911
    volumes:
      - ./rocket/broker/logs:/home/rocketmq/logs
      - ./rocket/broker.conf:/usr/local/dockerCompose/rocketmq/conf/broker.conf
    environment:
      TZ: Asia/Shanghai
      JAVA_OPT_EXT: -server -Xms256m -Xmx256m -Xmn128m
      NAMESRV_ADDR: rocketmqnamesrv:9876
    command: sh mqbroker -n rocketmqnamesrv:9876 -c /usr/local/dockerCompose/rocketmq/conf/broker.conf
  rocketmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rocketmqconsole
    ports:
      - 8180:8080
    environment:
      TZ: Asia/Shanghai
      JAVA_OPTS: -Drocketmq.namesrv.addr=rocketmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false